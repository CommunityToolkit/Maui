using System.Diagnostics;
using CommunityToolkit.Maui.Core.Services;
using Microsoft.Extensions.DependencyInjection;
using Microsoft.Maui.LifecycleEvents;
using Microsoft.Maui.Platform;

namespace CommunityToolkit.Maui.Core;

/// <summary>
/// <see cref="MauiAppBuilder"/> Extensions
/// </summary>
public static class AppBuilderExtensions
{
	/// <summary>
	/// Initializes the .NET MAUI Community Toolkit Core Library
	/// </summary>
	/// <param name="builder"><see cref="MauiAppBuilder"/> generated by <see cref="MauiApp"/> </param>
	/// <param name="options"><see cref="Options"/></param>
	/// <returns><see cref="MauiAppBuilder"/> initialized for <see cref="CommunityToolkit.Maui.Core"/></returns>
	public static MauiAppBuilder UseMauiCommunityToolkitCore(this MauiAppBuilder builder, Action<Options>? options = null)
	{
		options?.Invoke(new Options());

#if ANDROID
        if (Options.ShouldUseStatusBarBehaviorOnAndroidModalPage)
        {
            builder.Services.AddSingleton<IDialogFragmentService, DialogFragmentService>();

			builder.ConfigureLifecycleEvents(static lifecycleBuilder =>
			{
				lifecycleBuilder.AddAndroid(static androidBuilder =>
				{
					androidBuilder.OnCreate(static (activity, _) =>
					{
						if (activity is not AndroidX.AppCompat.App.AppCompatActivity componentActivity)
						{
							Trace.WriteLine($"Unable to Modify Android StatusBar On ModalPage: Activity {activity.LocalClassName} must be an {nameof(AndroidX.AppCompat.App.AppCompatActivity)}");
							return;
						}

						if (componentActivity.GetFragmentManager() is not AndroidX.Fragment.App.FragmentManager fragmentManager)
						{
							Trace.WriteLine($"Unable to Modify Android StatusBar On ModalPage: Unable to retrieve fragment manager from {nameof(AndroidX.AppCompat.App.AppCompatActivity)}");
							return;
						}

						var dialogFragmentService = IPlatformApplication.Current?.Services.GetRequiredService<IDialogFragmentService>() 
						                            ?? throw new InvalidOperationException($"Unable to retrieve {nameof(IDialogFragmentService)}");


						fragmentManager.RegisterFragmentLifecycleCallbacks(new FragmentLifecycleManager(dialogFragmentService), false);
					});
				});
			});
        }
#endif

		return builder;
	}
}