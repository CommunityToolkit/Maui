<?xml version="1.0" encoding="UTF-8"?>
<pages:BasePage xmlns="http://schemas.microsoft.com/dotnet/2021/maui"
                xmlns:x="http://schemas.microsoft.com/winfx/2009/xaml"
                xmlns:mct="http://schemas.microsoft.com/dotnet/2022/maui/toolkit"
                xmlns:pages="clr-namespace:CommunityToolkit.Maui.Sample.Pages"
                x:Class="CommunityToolkit.Maui.Sample.Pages.Behaviors.MultiValidationBehaviorPage"
                xmlns:vm="clr-namespace:CommunityToolkit.Maui.Sample.ViewModels.Behaviors"
                x:TypeArguments="vm:MultiValidationBehaviorViewModel"
                x:DataType="vm:MultiValidationBehaviorViewModel">

    <pages:BasePage.Resources>
        <Style x:Key="ValidEntryStyle" TargetType="Entry">
            <Setter Property="TextColor" Value="Green"/>
        </Style>
        
        <Style x:Key="InvalidEntryStyle" TargetType="Entry">
            <Setter Property="TextColor" Value="Red" />
        </Style>
    </pages:BasePage.Resources>


    <pages:BasePage.Content>
        <VerticalStackLayout Padding="{StaticResource ContentPadding}"
                 Spacing="50"
                 VerticalOptions="StartAndExpand">

            <Label Text="The MultiValidationBehavior is a behavior that allows the user to combine multiple validators to validate text input depending on specified parameters. For example, an Entry control can be styled differently depending on whether a valid or an invalid text input is provided. By allowing the user to chain multiple existing validators together, it offers a high degree of customizability when it comes to validation. Additional properties handling validation are inherited from ValidationBehavior"
                   TextColor="{StaticResource NormalLabelTextColor}" />

            <Label Text="Number validation : -10 to 5"
                   TextColor="{StaticResource NormalLabelTextColor}" />

            <Entry Placeholder="Number">
                <Entry.Behaviors>
                    <mct:MultiValidationBehavior x:Name="MultiValidation"
                                                     ValidStyle="{StaticResource ValidEntryStyle}"
                                                     InvalidStyle="{StaticResource InvalidEntryStyle}"
                                                     Flags="ValidateOnValueChanged">
                        <mct:MultiValidationBehavior.Children>
                            <mct:NumericValidationBehavior mct:MultiValidationBehavior.Error="NaN" />

                            <mct:NumericValidationBehavior MinimumValue="-10"
                                                           mct:MultiValidationBehavior.Error="Min: -10" />
                            <mct:NumericValidationBehavior MaximumValue="5"
                                                           mct:MultiValidationBehavior.Error="Max: 5" />
                        </mct:MultiValidationBehavior.Children>
                    </mct:MultiValidationBehavior>
                </Entry.Behaviors>
            </Entry>
            <Label HeightRequest="30"
                    Text="{Binding Errors[0], Source={x:Reference MultiValidation}}"/>
            <Label Text="Password validation" />
            <Entry IsPassword="True" Placeholder="Password">
                <Entry.Behaviors>
                    <mct:MultiValidationBehavior InvalidStyle="{StaticResource InvalidEntryStyle}"  
                                                 ValidStyle="{StaticResource ValidEntryStyle}"
                                                 Flags="ValidateOnValueChanged">
                        <mct:CharactersValidationBehavior x:Name="DigitValidation" 
                                                          CharacterType="Digit" 
                                                          MinimumCharacterTypeCount="1" 
                                                          mct:MultiValidationBehavior.Error="1 chiffre" 
                                                          RegexPattern="" />
                        <mct:CharactersValidationBehavior x:Name="UpperValidation" 
                                                          CharacterType="UppercaseLetter" 
                                                          MinimumCharacterTypeCount="1" 
                                                          mct:MultiValidationBehavior.Error="1 majuscule" 
                                                          RegexPattern="" />
                        <mct:CharactersValidationBehavior x:Name="SymbolValidation" 
                                                          CharacterType="NonAlphanumericSymbol" 
                                                          MinimumCharacterTypeCount="1" 
                                                          mct:MultiValidationBehavior.Error="1 symbole" 
                                                          RegexPattern=""  />
                        <mct:CharactersValidationBehavior x:Name="AnyValidation" 
                                                          CharacterType="Any" 
                                                          MinimumCharacterTypeCount="8" 
                                                          mct:MultiValidationBehavior.Error="8 caractères" 
                                                          RegexPattern="" />
                    </mct:MultiValidationBehavior>
                </Entry.Behaviors>
            </Entry>
            <VerticalStackLayout>
                <Label Text="{Binding IsValid, Source={x:Reference DigitValidation}, StringFormat='{}{0} : at least 1 digit'}"/>
                <Label Text="{Binding IsValid, Source={x:Reference UpperValidation}, StringFormat='{}{0} : at least 1 upper'}"/>
                <Label Text="{Binding IsValid, Source={x:Reference SymbolValidation}, StringFormat='{}{0} : at least 1 symbol'}"/>
                <Label Text="{Binding IsValid, Source={x:Reference AnyValidation}, StringFormat='{}{0} : at least 8 char'}"/>
            </VerticalStackLayout>
        </VerticalStackLayout>


    </pages:BasePage.Content>
</pages:BasePage>
