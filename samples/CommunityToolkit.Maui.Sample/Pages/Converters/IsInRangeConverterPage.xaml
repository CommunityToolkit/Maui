<?xml version="1.0" encoding="utf-8" ?>
<pages:BasePage
    x:Class="CommunityToolkit.Maui.Sample.Pages.Converters.IsInRangeConverterPage"
    xmlns="http://schemas.microsoft.com/dotnet/2021/maui"
    xmlns:x="http://schemas.microsoft.com/winfx/2009/xaml"
    xmlns:mct="http://schemas.microsoft.com/dotnet/2022/maui/toolkit"
    xmlns:pages="clr-namespace:CommunityToolkit.Maui.Sample.Pages"
    xmlns:vm="clr-namespace:CommunityToolkit.Maui.Sample.ViewModels.Converters"
    x:DataType="vm:IsInRangeConverterViewModel"
    x:TypeArguments="vm:IsInRangeConverterViewModel">

    <pages:BasePage.Resources>
        <ResourceDictionary>
            <Style x:Key="Description" TargetType="Label">
                <Setter Property="VerticalTextAlignment" Value="Start" />
                <Setter Property="HorizontalTextAlignment" Value="Center" />
                <Setter Property="LineBreakMode" Value="WordWrap" />
                <Setter Property="Margin" Value="4,0" />
            </Style>
            <Style x:Key="HR" TargetType="Line">
                <Setter Property="Stroke" Value="{AppThemeBinding Light=Black, Dark=White}" />
                <Setter Property="X2" Value="300" />
                <Setter Property="HorizontalOptions" Value="Center" />
            </Style>
            <x:String x:Key="StringInRangeMax">Toolkit</x:String>
            <x:String x:Key="StringInRangeMin">.NET</x:String>
            <x:String x:Key="StringGreaterThanMin">MAUI</x:String>
            <x:String x:Key="StringLessThanMax">Community</x:String>
            <x:String x:Key="DoubleMinString">37</x:String>
            <x:String x:Key="DoubleMaxString">73</x:String>
            <x:Double x:Key="DoubleMin">37</x:Double>
            <x:Double x:Key="DoubleMax">73</x:Double>
            <x:String x:Key="TimeSpanMinString">7:37 AM</x:String>
            <x:String x:Key="TimeSpanMaxString">5:37 PM</x:String>
            <x:TimeSpan x:Key="TimeSpanMin">07:37:37</x:TimeSpan>
            <x:TimeSpan x:Key="TimeSpanMax">17:37:37</x:TimeSpan>
            <x:String x:Key="CharMinString">G</x:String>
            <x:String x:Key="CharMaxString">L</x:String>
            <x:Char x:Key="CharMin">G</x:Char>
            <x:Char x:Key="CharMax">L</x:Char>
            <Style x:Key="TrueLabel" TargetType="Label">
                <Setter Property="Text" Value="TRUE" />
                <Setter Property="BackgroundColor" Value="Green" />
            </Style>
            <Style x:Key="FalseLabel" TargetType="Label">
                <Setter Property="Text" Value="FALSE" />
                <Setter Property="BackgroundColor" Value="Red" />
            </Style>
        </ResourceDictionary>
    </pages:BasePage.Resources>
    <pages:BasePage.Content>
        <ScrollView>
            <VerticalStackLayout Spacing="12">
                <Label
                    SemanticProperties.HeadingLevel="Level1"
                    Style="{StaticResource Description}"
                    Text="A converter that allows users to convert a object value into a boolean value, checking if the value is between MinValue and MaxValue, returning true if the value is within the range." />
                <Line Style="{StaticResource HR}" />
                <HorizontalStackLayout>
                    <Label x:Name="LabelForEntry">
                        <Label.FormattedText>
                            <FormattedString>
                                <Span Text="For the " />
                                <Span FontAttributes="Bold" Text="string" />
                                <Span Text=" " />
                            </FormattedString>
                        </Label.FormattedText>
                    </Label>
                    <Entry
                        x:Name="EntryText"
                        AutomationProperties.LabeledBy="LabelForEntry"
                        ClearButtonVisibility="WhileEditing"
                        Keyboard="Default"
                        SemanticProperties.Description="Enter text to check is if is in range."
                        Text="Community"
                        WidthRequest="200" />
                </HorizontalStackLayout>
                <Grid ColumnDefinitions="*,Auto" RowDefinitions="Auto,Auto,Auto">
                    <Label>
                        <Label.FormattedText>
                            <FormattedString>
                                <Span Text="In the range of '" />
                                <Span FontAttributes="Italic" Text="{StaticResource StringInRangeMin}" />
                                <Span Text="' to '" />
                                <Span FontAttributes="Italic" Text="{StaticResource StringInRangeMax}" />
                                <Span Text="'." />
                            </FormattedString>
                        </Label.FormattedText>
                    </Label>
                    <Label
                        Grid.Column="1"
                        Padding="4,0"
                        Style="{Binding Source={x:Reference EntryText}, Path=Text, Mode=OneWay, Converter={mct:IsInRangeConverter TrueObject={StaticResource TrueLabel}, FalseObject={StaticResource FalseLabel}, Min={StaticResource StringInRangeMin}, Max={StaticResource StringInRangeMax}}}" />
                    <Label Grid.Row="1">
                        <Label.FormattedText>
                            <FormattedString>
                                <Span Text="Greater than '" />
                                <Span FontAttributes="Italic" Text="{StaticResource StringGreaterThanMin}" />
                                <Span Text="'" />
                            </FormattedString>
                        </Label.FormattedText>
                    </Label>
                    <Label
                        Grid.Row="1"
                        Grid.Column="1"
                        Padding="4,0"
                        Style="{Binding Source={x:Reference EntryText}, Path=Text, Mode=OneWay, Converter={mct:IsInRangeConverter TrueObject={StaticResource TrueLabel}, FalseObject={StaticResource FalseLabel}, Min={StaticResource StringGreaterThanMin}}}" />
                    <Label Grid.Row="2">
                        <Label.FormattedText>
                            <FormattedString>
                                <Span Text="Less than '" />
                                <Span FontAttributes="Italic" Text="{StaticResource StringLessThanMax}" />
                                <Span Text="'" />
                            </FormattedString>
                        </Label.FormattedText>
                    </Label>
                    <Label
                        Grid.Row="2"
                        Grid.Column="1"
                        Padding="4,0"
                        Style="{Binding Source={x:Reference EntryText}, Path=Text, Mode=OneWay, Converter={mct:IsInRangeConverter TrueObject={StaticResource TrueLabel}, FalseObject={StaticResource FalseLabel}, Max={StaticResource StringLessThanMax}}}" />
                </Grid>
                <Line Style="{StaticResource HR}" />
                <HorizontalStackLayout Margin="0,16,0,0">
                    <Label x:Name="LabelForStepper">
                        <Label.FormattedText>
                            <FormattedString>
                                <Span Text="For the " />
                                <Span FontAttributes="Bold" Text="double" />
                                <Span Text=" " />
                                <Span Text="{Binding Source={x:Reference StepperSource}, Path=Value}" />
                            </FormattedString>
                        </Label.FormattedText>
                    </Label>
                    <Stepper
                        x:Name="StepperSource"
                        AutomationProperties.LabeledBy="LabelForStepper"
                        Increment="1"
                        Maximum="100"
                        Minimum="0"
                        SemanticProperties.Description="Stepper to check is if in range."
                        Value="42" />
                </HorizontalStackLayout>
                <Grid ColumnDefinitions="*,Auto" RowDefinitions="Auto,Auto,Auto">
                    <Label>
                        <Label.FormattedText>
                            <FormattedString>
                                <Span Text="In the range of '" />
                                <Span FontAttributes="Italic" Text="{StaticResource DoubleMinString}" />
                                <Span Text="' to '" />
                                <Span FontAttributes="Italic" Text="{StaticResource DoubleMaxString}" />
                                <Span Text="'" />
                            </FormattedString>
                        </Label.FormattedText>
                    </Label>
                    <Label
                        Grid.Column="1"
                        Padding="4,0"
                        Style="{Binding Source={x:Reference StepperSource}, Path=Value, Mode=OneWay, Converter={mct:IsInRangeConverter TrueObject={StaticResource TrueLabel}, FalseObject={StaticResource FalseLabel}, Min={StaticResource DoubleMin}, Max={StaticResource DoubleMax}}}" />
                    <Label Grid.Row="1">
                        <Label.FormattedText>
                            <FormattedString>
                                <Span Text="Greater than '" />
                                <Span FontAttributes="Italic" Text="{StaticResource DoubleMinString}" />
                                <Span Text="'" />
                            </FormattedString>
                        </Label.FormattedText>
                    </Label>
                    <Label
                        Grid.Row="1"
                        Grid.Column="1"
                        Padding="4,0"
                        Style="{Binding Source={x:Reference StepperSource}, Path=Value, Mode=OneWay, Converter={mct:IsInRangeConverter TrueObject={StaticResource TrueLabel}, FalseObject={StaticResource FalseLabel}, Min={StaticResource DoubleMin}}}" />
                    <Label Grid.Row="2">
                        <Label.FormattedText>
                            <FormattedString>
                                <Span Text="Less than '" />
                                <Span FontAttributes="Italic" Text="{StaticResource DoubleMaxString}" />
                                <Span Text="'" />
                            </FormattedString>
                        </Label.FormattedText>
                    </Label>
                    <Label
                        Grid.Row="2"
                        Grid.Column="1"
                        Padding="4,0"
                        Style="{Binding Source={x:Reference StepperSource}, Path=Value, Mode=OneWay, Converter={mct:IsInRangeConverter TrueObject={StaticResource TrueLabel}, FalseObject={StaticResource FalseLabel}, Max={StaticResource DoubleMax}}}" />
                </Grid>
                <Line Style="{StaticResource HR}" />
                <HorizontalStackLayout Margin="0,16,0,0">
                    <Label x:Name="LabelForTimePicker">
                        <Label.FormattedText>
                            <FormattedString>
                                <Span Text="For the " />
                                <Span FontAttributes="Bold" Text="TimeSpan" />
                                <Span Text=" " />
                            </FormattedString>
                        </Label.FormattedText>
                    </Label>
                    <TimePicker
                        x:Name="TimePickerSource"
                        AutomationProperties.LabeledBy="LabelForTimePicker"
                        SemanticProperties.Description="Time picker to check if is in range."
                        Time="14:14:14" />
                </HorizontalStackLayout>
                <Grid ColumnDefinitions="*,Auto" RowDefinitions="Auto,Auto,Auto">
                    <Label>
                        <Label.FormattedText>
                            <FormattedString>
                                <Span Text="In the range of '" />
                                <Span FontAttributes="Italic" Text="{StaticResource TimeSpanMinString}" />
                                <Span Text="' to '" />
                                <Span FontAttributes="Italic" Text="{StaticResource TimeSpanMaxString}" />
                                <Span Text="'" />
                            </FormattedString>
                        </Label.FormattedText>
                    </Label>
                    <Label
                        Grid.Column="1"
                        Padding="4,0"
                        Style="{Binding Source={x:Reference TimePickerSource}, Path=Time, Mode=OneWay, Converter={mct:IsInRangeConverter TrueObject={StaticResource TrueLabel}, FalseObject={StaticResource FalseLabel}, Min={StaticResource TimeSpanMin}, Max={StaticResource TimeSpanMax}}}" />
                    <Label Grid.Row="1">
                        <Label.FormattedText>
                            <FormattedString>
                                <Span Text="Greater than '" />
                                <Span FontAttributes="Italic" Text="{StaticResource TimeSpanMinString}" />
                                <Span Text="'" />
                            </FormattedString>
                        </Label.FormattedText>
                    </Label>
                    <Label
                        Grid.Row="1"
                        Grid.Column="1"
                        Padding="4,0"
                        Style="{Binding Source={x:Reference TimePickerSource}, Path=Time, Mode=OneWay, Converter={mct:IsInRangeConverter TrueObject={StaticResource TrueLabel}, FalseObject={StaticResource FalseLabel}, Min={StaticResource TimeSpanMin}}}" />
                    <Label Grid.Row="2">
                        <Label.FormattedText>
                            <FormattedString>
                                <Span Text="Less than '" />
                                <Span FontAttributes="Italic" Text="{StaticResource TimeSpanMaxString}" />
                                <Span Text="'" />
                            </FormattedString>
                        </Label.FormattedText>
                    </Label>
                    <Label
                        Grid.Row="2"
                        Grid.Column="1"
                        Padding="4,0"
                        Style="{Binding Source={x:Reference TimePickerSource}, Path=Time, Mode=OneWay, Converter={mct:IsInRangeConverter TrueObject={StaticResource TrueLabel}, FalseObject={StaticResource FalseLabel}, Max={StaticResource TimeSpanMax}}}" />
                </Grid>
                <Line Margin="0,16,0,0" Style="{StaticResource HR}" />
                <HorizontalStackLayout>
                    <Label x:Name="LabelForCharEntry">
                        <Label.FormattedText>
                            <FormattedString>
                                <Span Text="For the " />
                                <Span FontAttributes="Bold" Text="char" />
                                <Span Text=" " />
                            </FormattedString>
                        </Label.FormattedText>
                    </Label>
                    <Entry
                        x:Name="CharText"
                        AutomationProperties.LabeledBy="LabelForCharEntry"
                        ClearButtonVisibility="WhileEditing"
                        Keyboard="Default"
                        MaxLength="1"
                        SemanticProperties.Description="Enter char to check is if is in range."
                        Text="{Binding StringCharInRange}"
                        WidthRequest="200" />
                </HorizontalStackLayout>
                <Grid ColumnDefinitions="*,Auto" RowDefinitions="Auto,Auto,Auto">
                    <Label>
                        <Label.FormattedText>
                            <FormattedString>
                                <Span Text="In the range of '" />
                                <Span FontAttributes="Italic" Text="{StaticResource CharMinString}" />
                                <Span Text="' to '" />
                                <Span FontAttributes="Italic" Text="{StaticResource CharMaxString}" />
                                <Span Text="'" />
                            </FormattedString>
                        </Label.FormattedText>
                    </Label>
                    <Label
                        Grid.Column="1"
                        Padding="4,0"
                        Style="{Binding CharIsInRange, Mode=OneWay, Converter={mct:IsInRangeConverter TrueObject={StaticResource TrueLabel}, FalseObject={StaticResource FalseLabel}, Min={StaticResource CharMin}, Max={StaticResource CharMax}}}" />
                    <Label Grid.Row="1">
                        <Label.FormattedText>
                            <FormattedString>
                                <Span Text="Greater than '" />
                                <Span FontAttributes="Italic" Text="{StaticResource CharMinString}" />
                                <Span Text="'" />
                            </FormattedString>
                        </Label.FormattedText>
                    </Label>
                    <Label
                        Grid.Row="1"
                        Grid.Column="1"
                        Padding="4,0"
                        Style="{Binding CharIsInRange, Mode=OneWay, Converter={mct:IsInRangeConverter TrueObject={StaticResource TrueLabel}, FalseObject={StaticResource FalseLabel}, Min={StaticResource CharMin}}}" />
                    <Label Grid.Row="2">
                        <Label.FormattedText>
                            <FormattedString>
                                <Span Text="Less than '" />
                                <Span FontAttributes="Italic" Text="{StaticResource CharMaxString}" />
                                <Span Text="'" />
                            </FormattedString>
                        </Label.FormattedText>
                    </Label>
                    <Label
                        Grid.Row="2"
                        Grid.Column="1"
                        Padding="4,0"
                        Style="{Binding CharIsInRange, Mode=OneWay, Converter={mct:IsInRangeConverter TrueObject={StaticResource TrueLabel}, FalseObject={StaticResource FalseLabel}, Max={StaticResource CharMax}}}" />
                </Grid>
            </VerticalStackLayout>
        </ScrollView>
    </pages:BasePage.Content>
</pages:BasePage>